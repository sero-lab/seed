{"version":3,"sources":["images/head.png","images/sero_man.png","api/config.ts","i18n.ts","api/service.ts","api/contract.ts","components/seed/seed.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","address","abi","lang","localStorage","getItem","setItem","i18n","use","LanguageDetector","initReactI18next","init","resources","en_US","translation","zh_CN","ko_KR","ja_JP","be_BY","fallbackLng","debug","interpolation","escapeValue","seropp","require","service","id","this","hash","that","Promise","resolve","reject","setInterval","rpc","then","rest","clearInterval","catch","e","method","args","initDApp","host","data","params","axios","post","resp","error","message","result","Error","getAccountList","err","dapp","name","contractAddress","config","github","author","url","window","location","origin","pathname","logo","barColor","navColor","barMode","navMode","getInfo","language","info","changeLanguage","serojs","contract","callContract","mainPKr","call","res","account","cy","value","execute","from","packData","to","unPackDataEx","MainPKr","gas","PK","executeContract","Countdown","Statistic","fromValue","v","d","BigNumber","dividedBy","Seed","state","seedBalance","seroBalance","backedValue","claimantValue","time","mask","dataArr","showUserName","showUsermainpkr","mainpkr","Listdata","visibleName","visiblePledge","visibleDetail","visibleRules","pledgeNum","visibleDestruction","destructionNum","detailModal","radioStatu","getdata","accountList","userobj","strmainpk","undefined","sessionStorage","length","find","item","IsCurrent","Name","strmainpkr","substring","ListShow","myExchangeValue","setState","Balance","get","toFixed","radiobtn","str","getList","listdata","i","objShow","index","seronum","seednum","Unlocked","Withdrawn","operation","creatData","countDown","showDetail","lookDetail","dayNum","todaypercentage","createTime","parseInt","lastWithDrawTime","extracted","transformation","newTime","Date","getTime","toString","extractable","c","percentage","total","multipliedBy","today","formatTime","push","getListScreen","toNumber","showModal","hideModal","showPledgeModal","hidePledgeModal","sendPledgeModal","sendCy","getTransactionReceipt","showDestructionModal","hideDestructionModal","sendDestructionModal","information","num","Math","floor","hideDetail","setLanguage","interId","n","number","format","newArr","formatArr","getFullYear","formatNumber","getMonth","getDate","getHours","getMinutes","getSeconds","replace","target","dataset","userName","Withdrawal","className","onClick","openRules","t","visible","okText","cancelText","centered","footer","closable","style","height","float","closeRules","type","src","alt","title","onOk","onCancel","maskClosable","map","data-name","data-mainpkr","selectName","key","valueStyle","color","min","defaultValue","onChange","onChangeSeedNum","disabled","onChangeSeroNum","size","data-index","viewDetail","column","Item","label","suffix","minus","span","WithdrawalDetail","background","textAlign","onFinish","cli","React","Component","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.362b0322.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/head.3d0aa135.png\";","module.exports = __webpack_public_path__ + \"static/media/sero_man.89bc7980.png\";","export const address: string = \"2mJjTksWLXMKbyyPi2JfQfDLUcGn3QyWvZT5QZXJpEEWP23Jseih2Qm1z2MFfGw4oAJvGN3H2B8r2CwyW3YWRmpY\";\r\nexport const abi: any = [\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"exchange\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"myExchangeValue\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"backedValue\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"claimantValue\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"myRecordInfo\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"index\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"components\": [\r\n                            {\r\n                                \"internalType\": \"address\",\r\n                                \"name\": \"owner\",\r\n                                \"type\": \"address\"\r\n                            },\r\n                            {\r\n                                \"internalType\": \"uint256\",\r\n                                \"name\": \"createTime\",\r\n                                \"type\": \"uint256\"\r\n                            },\r\n                            {\r\n                                \"internalType\": \"uint256\",\r\n                                \"name\": \"lastWithDrawTime\",\r\n                                \"type\": \"uint256\"\r\n                            },\r\n                            {\r\n                                \"internalType\": \"uint256\",\r\n                                \"name\": \"total\",\r\n                                \"type\": \"uint256\"\r\n                            }\r\n                        ],\r\n                        \"internalType\": \"struct ISeed.Record\",\r\n                        \"name\": \"data\",\r\n                        \"type\": \"tuple\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ISeed.RecordInfo[]\",\r\n                \"name\": \"result\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"myValidRecordInfo\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"index\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"components\": [\r\n                            {\r\n                                \"internalType\": \"address\",\r\n                                \"name\": \"owner\",\r\n                                \"type\": \"address\"\r\n                            },\r\n                            {\r\n                                \"internalType\": \"uint256\",\r\n                                \"name\": \"createTime\",\r\n                                \"type\": \"uint256\"\r\n                            },\r\n                            {\r\n                                \"internalType\": \"uint256\",\r\n                                \"name\": \"lastWithDrawTime\",\r\n                                \"type\": \"uint256\"\r\n                            },\r\n                            {\r\n                                \"internalType\": \"uint256\",\r\n                                \"name\": \"total\",\r\n                                \"type\": \"uint256\"\r\n                            }\r\n                        ],\r\n                        \"internalType\": \"struct ISeed.Record\",\r\n                        \"name\": \"data\",\r\n                        \"type\": \"tuple\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ISeed.RecordInfo[]\",\r\n                \"name\": \"result\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"withDraw\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]","import LanguageDetector from 'i18next-browser-languagedetector';\r\nimport i18n from 'i18next';\r\nimport en_US from './locales/en_US.json';\r\nimport zh_CN from './locales/zh_CN.json';\r\nimport ko_KR from './locales/ko_KR.json';\r\nimport ja_JP from './locales/ja_JP.json';\r\nimport be_BY from './locales/be_BY.json';\r\n\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nlet lang = localStorage.getItem(\"language\");\r\nif (!lang) {\r\n    lang = 'zh_CN';\r\n    localStorage.setItem(\"language\", 'zh_CN');\r\n}\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources: {\r\n            en_US: {\r\n                translation: en_US,\r\n            },\r\n            zh_CN: {\r\n                translation: zh_CN,\r\n            },\r\n            ko_KR: {\r\n                translation: ko_KR,\r\n            },\r\n            ja_JP: {\r\n                translation: ja_JP,\r\n            },\r\n            be_BY: {\r\n                translation: be_BY,\r\n            },\r\n        },\r\n        fallbackLng: lang,\r\n        debug: false,\r\n        interpolation: {\r\n            escapeValue: false,\r\n        },\r\n    });\r\n\r\nexport default i18n;\r\n","import * as config from './config';\r\nimport axios from 'axios';\r\nimport i18n from '../i18n';\r\nconst seropp = require(\"sero-pp\");\r\n\r\nclass Service {\r\n    id: number\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n    }\r\n    async getTransactionReceipt(hash: string) {\r\n        const that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let id: any\r\n            id = setInterval(function () {\r\n                that.rpc(\"sero_getTransactionReceipt\", [hash]).then((rest: any) => {\r\n                    if (rest) {\r\n                        clearInterval(id)\r\n                        resolve(rest);\r\n                    } else {\r\n\r\n                    }\r\n\r\n                }).catch(e => {\r\n                    reject(e)\r\n                })\r\n            }, 5000)\r\n        })\r\n    }\r\n    \r\n    async rpc(method: string, args: any) {\r\n        return new Promise((resolve, reject) => {\r\n            this.initDApp().then((host: any) => {\r\n                const data: any = {\r\n                    id: this.id++,\r\n                    method: method,\r\n                    params: args\r\n                }\r\n                if (!host) {\r\n                    reject(new Error(\"rpc unset !\"))\r\n                } else {\r\n                    axios.post(host, data).then((resp: any) => {\r\n                        if (resp.data && resp.data.error) {\r\n                            reject(resp.data.error.message)\r\n                        } else if (resp.data && resp.data.result) {\r\n                            resolve(resp.data.result)\r\n                        }\r\n                    }).catch(e => {\r\n                        reject(e)\r\n                    })\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    async accountList() {\r\n        return new Promise((resolve, reject) => {\r\n            seropp.getAccountList(function (data: any, err: any) {\r\n                if (err) {\r\n                    reject(err)\r\n                } else {\r\n                    resolve(data)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    async initDApp() {\r\n        const dapp = {\r\n            name: \"SEED\",\r\n            contractAddress: config.address,\r\n            github: \"https://github.com/conspay/coinhi\",\r\n            author: \"seed\",\r\n            url: window.location.origin + window.location.pathname,\r\n            logo: window.location.origin + window.location.pathname + \"logo.png\",\r\n            barColor: \"#2a3a51\",\r\n            navColor: \"#2a3a51\",\r\n            barMode: \"dark\",\r\n            navMode: \"light\"\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            seropp.init(dapp, function (rest: any, err: any) {\r\n                if (err) {\r\n                    reject(err)\r\n                } else {\r\n                    seropp.getInfo(function (data: any) {\r\n                        if (data) {\r\n                            localStorage.setItem(\"language\", data.language);\r\n                            localStorage.setItem(\"host\", data.rpc)\r\n                        }\r\n                        resolve(data.rpc)\r\n                    })\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    setLanguage() {\r\n        seropp.getInfo(function (info: any) {\r\n            localStorage.setItem(\"language\", info.language);\r\n            i18n.changeLanguage(info.language).catch((e:any)=>{\r\n            });\r\n        })\r\n    }\r\n}\r\n\r\nconst service = new Service();\r\n\r\n\r\nexport default service;","import * as config from './config';\r\nimport service from \"./service\";\r\nconst serojs = require(\"serojs\")\r\nconst seropp = require(\"sero-pp\")\r\n\r\nexport interface Params {\r\n    from?: string\r\n    to: string\r\n    cy?: string\r\n    value?: string\r\n    gas?: string\r\n    gasPrice?: string\r\n    data?: string\r\n}\r\nclass Contract {\r\n    contract: any;\r\n\r\n    constructor() {\r\n        this.contract = serojs.callContract(config.abi, config.address)\r\n    }\r\n\r\n    async getList(mainPKr: string) {\r\n        const res = await this.call(\"myRecordInfo\", [], mainPKr);\r\n        return res;\r\n    }\r\n\r\n    async getListScreen(mainPKr: string) {\r\n        const res = await this.call(\"myValidRecordInfo\", [], mainPKr);\r\n        return res;\r\n    }\r\n\r\n    async sendCy(account: any, cy: string, value?: string) {\r\n        const res = await this.execute(\"exchange\", [], account, cy, value);\r\n        return res;\r\n    }\r\n    async Withdrawal(account: any, cy: string, value?: any) {\r\n        const res = await this.execute(\"withDraw\", [value], account, cy, \"0x0\");\r\n        return res;\r\n    }\r\n\r\n    async myExchangeValue(mainPKr: string) {\r\n        const res = await this.call(\"myExchangeValue\", [], mainPKr);\r\n        return res;\r\n    }\r\n\r\n    async call(method: string, args: Array<any>, from: string): Promise<any> {\r\n        const packData: any = this.contract.packData(method, args, true)\r\n        const contract = this.contract;\r\n        return new Promise((resolve, reject) => {\r\n            const params: Params = {\r\n                to: this.contract.address\r\n            }\r\n            params.from = from\r\n            params.data = packData;\r\n\r\n            service.rpc(\"sero_call\", [params, \"latest\"]).then(data => {\r\n                if (data != \"0x\") {\r\n                    const rest: any = contract.unPackDataEx(method, data)\r\n                    resolve(rest)\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    async execute(method: string, args: Array<any>, account: any, cy?: string, value?: string): Promise<any> {\r\n        const packData: any = this.contract.packData(method, args, true)\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const params: Params = {\r\n                to: this.contract.address\r\n            }\r\n            params.from = account.MainPKr\r\n            params.data = packData;\r\n            if (cy) {\r\n                params.cy = cy;\r\n            }\r\n            if (value) {\r\n                params.value = value;\r\n            }\r\n            service.rpc(\"sero_estimateGas\", [params]).then((data: any) => {\r\n                params.gas = data;\r\n                params.from = account.PK\r\n                seropp.executeContract(params, function (hash: any, err: any) {\r\n                    if (err) {\r\n                        reject(err)\r\n                    } else {\r\n                        resolve(hash)\r\n                    }\r\n                })\r\n            }).catch(e => {\r\n                reject(e)\r\n            })\r\n        })\r\n    }\r\n}\r\nconst contract = new Contract();\r\n\r\nexport default contract;","import React from 'react';\r\nimport contract from '../../api/contract';\r\nimport service from '../../api/service';\r\nimport { Modal, InputNumber, Input, notification, Button, Statistic, Descriptions, Switch, Radio } from 'antd';\r\nimport { BigNumber } from \"bignumber.js\";\r\nimport './seed.scss';\r\nimport i18n from '../../i18n'\r\nimport { composeInitialProps } from 'react-i18next';\r\nconst { Countdown } = Statistic;\r\n\r\ninterface item {\r\n  index: string,\r\n  seronum: string,\r\n  seednum: string,\r\n  Unlocked: BigNumber,\r\n  Withdrawn: BigNumber,\r\n  operation: string,\r\n  creatData: string,\r\n  countDown: number,\r\n  showDetail: boolean,\r\n  lookDetail: boolean,\r\n  dayNum: number,\r\n  todaypercentage: string\r\n}\r\ninterface Seeds {\r\n  seedBalance: string,\r\n  seroBalance: string,\r\n  backedValue: number,\r\n  claimantValue: number,\r\n  time: number,\r\n  mask: boolean,\r\n  data: Array<any>,\r\n  dataArr: Array<any>,\r\n  showUserName: string,\r\n  showUsermainpkr: string,\r\n  account: object,\r\n  mainpkr: string,\r\n  Listdata: Array<item>,\r\n  visibleName: boolean,\r\n  visiblePledge: boolean,\r\n  visibleDetail: boolean,\r\n  visibleRules: boolean,\r\n  pledgeNum: any,\r\n  visibleDestruction: boolean,\r\n  destructionNum: any,\r\n  detailModal: any,\r\n  radioStatu: boolean\r\n}\r\n\r\nclass Seed extends React.Component<any, Seeds> {\r\n  state: Seeds = {\r\n    seedBalance: \"\",\r\n    seroBalance: \"\",\r\n    backedValue: 0,\r\n    claimantValue: 0,\r\n    time: 86400,\r\n    mask: false,\r\n    data: [],\r\n    dataArr: [],\r\n    showUserName: \"\",\r\n    showUsermainpkr: \"\",\r\n    account: {},\r\n    mainpkr: \"\",\r\n    Listdata: [],\r\n    visibleName: false,\r\n    visiblePledge: false,\r\n    visibleDetail: false,\r\n    visibleRules: false,\r\n    pledgeNum: 100,\r\n    visibleDestruction: false,\r\n    destructionNum: 1,\r\n    detailModal: {},\r\n    radioStatu: false\r\n  }\r\n  componentDidMount() {\r\n    let that = this;\r\n    service.setLanguage();\r\n    that.getdata();\r\n    let interId: any = sessionStorage.getItem(\"interId\");\r\n    if (interId) {\r\n      clearInterval(interId)\r\n    }\r\n    interId = setInterval(() => that.getdata(), 5 * 10 ** 3);\r\n    sessionStorage.setItem(\"interId\", interId)\r\n  }\r\n\r\n  getdata = () => {\r\n    let that = this;\r\n    service.accountList().then((res: any) => {\r\n      let userobj: any = {}\r\n      if (sessionStorage.getItem(\"userName\")?.length === undefined) {\r\n        userobj = res.find(function (item: any) {\r\n          return item.IsCurrent === true;\r\n        })\r\n      } else {\r\n        userobj = res.find(function (item: any) {\r\n          return item.Name === sessionStorage.getItem(\"userName\");\r\n        })\r\n      }\r\n      let strmainpk: string = userobj.MainPKr;\r\n      let length = strmainpk.length;\r\n      let startmainpkr = strmainpk.substring(0, 5);\r\n      let endmainpkr = strmainpk.substring(length - 5, length)\r\n      let strmainpkr = startmainpkr + \"...\" + endmainpkr;\r\n      that.ListShow(userobj.MainPKr);\r\n      that.myExchangeValue(userobj.MainPKr);\r\n      that.setState({\r\n        data: res,\r\n        showUserName: userobj.Name,\r\n        showUsermainpkr: strmainpkr,\r\n        mainpkr: userobj.MainPKr,\r\n        account: userobj,\r\n        mask: false,\r\n        destructionNum: 1,\r\n        pledgeNum: 100,\r\n        seedBalance: new BigNumber(userobj.Balance.get(\"SEED\")).dividedBy(10 ** 18).toFixed(2),\r\n        seroBalance: new BigNumber(userobj.Balance.get(\"SERO\")).dividedBy(10 ** 18).toFixed(2),\r\n      })\r\n    }).catch(e => {\r\n\r\n    })\r\n  }\r\n  radiobtn = (e: any) => {\r\n    let that = this;\r\n    that.setState({\r\n      radioStatu: e\r\n    });\r\n    that.getdata();\r\n  }\r\n\r\n  ListShow = (str: string) => {\r\n    let that = this;\r\n    if (that.state.radioStatu) {\r\n      contract.getList(str).then((res) => {\r\n        let listdata: Array<item> = [];\r\n        for (let i = 0; i < res.result.length; i++) {\r\n          let objShow = {\r\n            index: \"\",\r\n            seronum: \"\",\r\n            seednum: \"\",\r\n            Unlocked: new BigNumber(0),\r\n            Withdrawn: new BigNumber(0),\r\n            operation: \"\",\r\n            creatData: \"\",\r\n            countDown: 0,\r\n            showDetail: true,\r\n            lookDetail: true,\r\n            dayNum: 0,\r\n            todaypercentage: \"\"\r\n          }\r\n          let createTime = parseInt(res.result[i].data.createTime);\r\n          let lastWithDrawTime = parseInt(res.result[i].data.lastWithDrawTime);\r\n          const extracted = that.transformation(createTime, lastWithDrawTime);\r\n          const newTime = parseInt((new Date().getTime() / 1000).toString());\r\n          const extractable = that.transformation(createTime, newTime);\r\n          const c = newTime - lastWithDrawTime;\r\n          const countDown = (that.state.time + lastWithDrawTime) * 1000;\r\n          if (extracted.percentage !== 0) {\r\n            objShow.Withdrawn = fromValue(res.result[i].data.total, 18).multipliedBy(extracted.percentage)\r\n            new BigNumber(res.result[i].data.total).multipliedBy(extracted.percentage).dividedBy(10 ** 18).toString();\r\n          }\r\n          if (extractable.percentage !== 0) {\r\n            objShow.Unlocked = fromValue(res.result[i].data.total, 18).multipliedBy(extractable.percentage)\r\n            objShow.dayNum = extractable.today\r\n            objShow.todaypercentage = extractable.todaypercentage\r\n          }\r\n          if (c < that.state.time) {\r\n            objShow.operation = \"state\";\r\n          } else {\r\n            objShow.operation = \"statein\";\r\n          }\r\n          if (newTime * 1000 < countDown) {\r\n            objShow.lookDetail = false\r\n          }\r\n          if (createTime + that.state.time * 10 < lastWithDrawTime) {\r\n            objShow.operation = \"state\";\r\n            objShow.showDetail = false\r\n          }\r\n          objShow.index = res.result[i].index;\r\n          objShow.seronum = new BigNumber(res.result[i].data.total).dividedBy(10 ** 16).toString();\r\n          objShow.seednum = new BigNumber(res.result[i].data.total).dividedBy(10 ** 18).toString();\r\n          objShow.creatData = that.formatTime(createTime * 1000, 'M/D/Y h:m');\r\n          objShow.countDown = countDown;\r\n          listdata.push(objShow)\r\n        }\r\n        that.setState({\r\n          Listdata: listdata\r\n        })\r\n      }).catch(e => {\r\n      }).catch((e) => {\r\n      })\r\n    } else {\r\n      contract.getListScreen(str).then((res) => {\r\n        let listdata: Array<item> = [];\r\n        for (let i = 0; i < res.result.length; i++) {\r\n          let objShow = {\r\n            index: \"\",\r\n            seronum: \"\",\r\n            seednum: \"\",\r\n            Unlocked: new BigNumber(0),\r\n            Withdrawn: new BigNumber(0),\r\n            operation: \"\",\r\n            creatData: \"\",\r\n            countDown: 0,\r\n            showDetail: true,\r\n            lookDetail: true,\r\n            dayNum: 0,\r\n            todaypercentage: \"\"\r\n          }\r\n          let createTime = parseInt(res.result[i].data.createTime);\r\n          let lastWithDrawTime = parseInt(res.result[i].data.lastWithDrawTime);\r\n          const extracted = that.transformation(createTime, lastWithDrawTime);\r\n          const newTime = parseInt((new Date().getTime() / 1000).toString());\r\n          const extractable = that.transformation(createTime, newTime);\r\n          const c = newTime - lastWithDrawTime;\r\n          const countDown = (that.state.time + lastWithDrawTime) * 1000;\r\n          if (extracted.percentage !== 0) {\r\n            objShow.Withdrawn = fromValue(res.result[i].data.total, 18).multipliedBy(extracted.percentage)\r\n            new BigNumber(res.result[i].data.total).multipliedBy(extracted.percentage).dividedBy(10 ** 18).toString();\r\n          }\r\n          if (extractable.percentage !== 0) {\r\n            objShow.Unlocked = fromValue(res.result[i].data.total, 18).multipliedBy(extractable.percentage)\r\n            objShow.dayNum = extractable.today\r\n            objShow.todaypercentage = extractable.todaypercentage\r\n          }\r\n          if (c < that.state.time) {\r\n            objShow.operation = \"state\";\r\n          } else {\r\n            objShow.operation = \"statein\";\r\n          }\r\n          if (newTime * 1000 < countDown) {\r\n            objShow.lookDetail = false\r\n          }\r\n          if (createTime + that.state.time * 10 < lastWithDrawTime) {\r\n            objShow.operation = \"state\";\r\n            objShow.showDetail = false\r\n          }\r\n          objShow.index = res.result[i].index;\r\n          objShow.seronum = new BigNumber(res.result[i].data.total).dividedBy(10 ** 16).toString();\r\n          objShow.seednum = new BigNumber(res.result[i].data.total).dividedBy(10 ** 18).toString();\r\n          objShow.creatData = that.formatTime(createTime * 1000, 'M/D/Y h:m');\r\n          objShow.countDown = countDown;\r\n          listdata.push(objShow)\r\n        }\r\n        that.setState({\r\n          Listdata: listdata\r\n        })\r\n      }).catch(e => {\r\n      }).catch((e) => {\r\n      })\r\n    }\r\n  }\r\n  formatNumber(n: any) {\r\n    n = n.toString()\r\n    return n[1] ? n : '0' + n;\r\n  }\r\n  formatTime(number: number, format: any) {\r\n    let time = new Date(number)\r\n    let newArr = []\r\n    let formatArr = ['Y', 'M', 'D', 'h', 'm', 's'];\r\n    newArr.push(time.getFullYear());\r\n    newArr.push(this.formatNumber(time.getMonth() + 1));\r\n    newArr.push(this.formatNumber(time.getDate()));\r\n    newArr.push(this.formatNumber(time.getHours()));\r\n    newArr.push(this.formatNumber(time.getMinutes()));\r\n    newArr.push(this.formatNumber(time.getSeconds()));\r\n    for (let i in newArr) {\r\n      format = format.replace(formatArr[i], newArr[i]);\r\n    }\r\n    return format;\r\n  }\r\n  myExchangeValue = (str: string) => {\r\n    let that = this;\r\n    contract.myExchangeValue(str).then((res) => {\r\n      that.setState({\r\n        claimantValue: new BigNumber(res[1]).dividedBy(10 ** 18).toNumber(),\r\n        backedValue: new BigNumber(res[0]).dividedBy(10 ** 18).toNumber()\r\n      })\r\n    })\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visibleName: true,\r\n    });\r\n  };\r\n  hideModal = () => {\r\n    this.setState({\r\n      visibleName: false,\r\n    });\r\n  };\r\n  selectName(e: any) {\r\n    let that = this;\r\n    that.ListShow(e.target.dataset.mainpkr);\r\n    that.myExchangeValue(e.target.dataset.mainpkr);\r\n    let userobj = that.state.data.find(function (item: any) {\r\n      return item.Name === e.target.dataset.name;\r\n    })\r\n    let userName = e.target.dataset.name;\r\n    sessionStorage.setItem(\"userName\", userName);\r\n    that.setState({\r\n      visibleName: false,\r\n      showUserName: userobj.Name,\r\n      mainpkr: userobj.MainPKr,\r\n      account: userobj,\r\n      seedBalance: new BigNumber(userobj.Balance.get(\"SEED\")).dividedBy(10 ** 18).toFixed(2),\r\n      seroBalance: new BigNumber(userobj.Balance.get(\"SERO\")).dividedBy(10 ** 18).toFixed(2),\r\n    });\r\n  };\r\n  showPledgeModal = () => {\r\n    this.setState({\r\n      visiblePledge: true,\r\n      pledgeNum: 100,\r\n      mask: true\r\n    });\r\n  };\r\n  hidePledgeModal = () => {\r\n    this.setState({\r\n      visiblePledge: false,\r\n      pledgeNum: 100,\r\n      mask: false\r\n    });\r\n  };\r\n  sendPledgeModal = () => {\r\n    let that = this;\r\n    that.setState({\r\n      visiblePledge: false,\r\n      pledgeNum: 100,\r\n      mask: true\r\n    });\r\n    let cy = \"SERO\";\r\n    contract.sendCy(that.state.account, cy, \"0x\" + new BigNumber(that.state.pledgeNum).multipliedBy(10 ** 18).toString(16)).then((res) => {\r\n      service.getTransactionReceipt(res).then(() => {\r\n        that.getdata();\r\n      }).catch(e => {\r\n\r\n      });\r\n    }).catch((e) => {\r\n      this.setState({\r\n        visiblePledge: false,\r\n        pledgeNum: 100,\r\n        mask: false\r\n      });\r\n    });\r\n  };\r\n  showDestructionModal = () => {\r\n    this.setState({\r\n      visibleDestruction: true,\r\n      destructionNum: 1,\r\n      mask: true\r\n    });\r\n  };\r\n  hideDestructionModal = () => {\r\n    this.setState({\r\n      visibleDestruction: false,\r\n      destructionNum: 1,\r\n      mask: false\r\n    });\r\n  };\r\n  sendDestructionModal = () => {\r\n    let that = this;\r\n    that.setState({\r\n      visibleDestruction: false,\r\n      mask: true\r\n    });\r\n    let cy = \"SEED\";\r\n    contract.sendCy(that.state.account, cy, \"0x\" + new BigNumber(that.state.destructionNum).multipliedBy(10 ** 18).toString(16)).then((res) => {\r\n      service.getTransactionReceipt(res).then(() => {\r\n        that.getdata();\r\n      }).catch(e => {\r\n\r\n      });\r\n    }).catch((e) => {\r\n      this.setState({\r\n        visibleDestruction: false,\r\n        destructionNum: 1,\r\n        mask: false\r\n      });\r\n    });\r\n  };\r\n  Withdrawal(e: any) {\r\n    let that = this;\r\n    let cy = \"SERO\";\r\n    if (e.target.dataset.name === \"statein\") {\r\n      contract.Withdrawal(that.state.account, cy, e.target.dataset.index).then((res) => {\r\n        this.setState({\r\n          mask: true\r\n        });\r\n        service.getTransactionReceipt(res).then(() => {\r\n          that.getdata();\r\n        }).catch(e => {\r\n        });\r\n      })\r\n    }\r\n  }\r\n\r\n  WithdrawalDetail(e: any) {\r\n    let that = this;\r\n    let cy = \"SERO\";\r\n    contract.Withdrawal(that.state.account, cy, e.target.dataset.index).then((res) => {\r\n      this.setState({\r\n        mask: true,\r\n        visibleDetail: false,\r\n      });\r\n      service.getTransactionReceipt(res).then(() => {\r\n        that.getdata();\r\n      }).catch(e => {\r\n      });\r\n    })\r\n  }\r\n  transformation = (createTime: number, lastWithDrawTime: number) => {\r\n    let that = this;\r\n    let information = {\r\n      percentage: 0,\r\n      today: 0,\r\n      todaypercentage: \"\"\r\n    }\r\n    let num: number = Math.floor((lastWithDrawTime - createTime) / that.state.time) + 1;\r\n    if (num < 0) {\r\n      num = 0;\r\n    }\r\n    switch (num) {\r\n      case 0:\r\n        information.percentage = 0.00;\r\n        information.today = 0;\r\n        information.todaypercentage = \"0%\";\r\n        break;\r\n      case 1:\r\n        information.percentage = 0.06;\r\n        information.today = 1;\r\n        information.todaypercentage = \"6%\";\r\n        break;\r\n      case 2:\r\n        information.percentage = 0.13;\r\n        information.today = 2;\r\n        information.todaypercentage = \"7%\";\r\n        break;\r\n      case 3:\r\n        information.percentage = 0.21;\r\n        information.today = 3;\r\n        information.todaypercentage = \"8%\";\r\n        break;\r\n      case 4:\r\n        information.percentage = 0.30;\r\n        information.today = 4;\r\n        information.todaypercentage = \"9%\";\r\n        break;\r\n      case 5:\r\n        information.percentage = 0.40;\r\n        information.today = 5;\r\n        information.todaypercentage = \"10%\";\r\n        break;\r\n      case 6:\r\n        information.percentage = 0.50;\r\n        information.today = 6;\r\n        information.todaypercentage = \"10%\";\r\n        break;\r\n      case 7:\r\n        information.percentage = 0.61;\r\n        information.today = 7;\r\n        information.todaypercentage = \"11%\";\r\n        break;\r\n      case 8:\r\n        information.percentage = 0.73;\r\n        information.today = 8;\r\n        information.todaypercentage = \"12%\";\r\n        break;\r\n      case 9:\r\n        information.percentage = 0.86;\r\n        information.today = 9;\r\n        information.todaypercentage = \"13%\";\r\n        break;\r\n      case 10:\r\n        information.percentage = 1;\r\n        information.today = 10;\r\n        information.todaypercentage = \"14%\";\r\n        break;\r\n      default:\r\n        information.percentage = 1;\r\n        information.today = 10;\r\n        information.todaypercentage = \"14%\";\r\n    }\r\n    return information;\r\n  }\r\n  onChangeSeedNum(e: any) {\r\n    let that = this;\r\n    if (e != null) {\r\n      that.setState({\r\n        pledgeNum: e * 100\r\n      })\r\n    } else {\r\n      that.setState({\r\n        pledgeNum: 0\r\n      })\r\n    }\r\n  }\r\n  onChangeSeroNum(e: any) {\r\n    let that = this;\r\n    if (e != null) {\r\n      that.setState({\r\n        destructionNum: e\r\n      })\r\n    } else {\r\n      that.setState({\r\n        destructionNum: 0\r\n      })\r\n    }\r\n  }\r\n  cli() {\r\n    let that = this;\r\n    that.setState({\r\n      visibleDetail: false\r\n    })\r\n\r\n\r\n  }\r\n  openRules() {\r\n    let that = this;\r\n    that.setState({\r\n      visibleRules: true\r\n    })\r\n  }\r\n  closeRules() {\r\n    let that = this;\r\n    that.setState({\r\n      visibleRules: false\r\n    })\r\n  }\r\n  viewDetail(e: any) {\r\n    let that = this;\r\n    let userobj = that.state.Listdata.find(function (item: any) {\r\n      return item.index === e.target.dataset.index;\r\n    })\r\n    that.setState({\r\n      visibleDetail: true,\r\n      detailModal: userobj\r\n    })\r\n  }\r\n  hideDetail = () => {\r\n    let that = this;\r\n    that.setState({\r\n      visibleDetail: false,\r\n    })\r\n  }\r\n  render() {\r\n    const { detailModal } = this.state;\r\n    return (\r\n      <div className=\"seed \">\r\n        <div className=\"seed-box\">\r\n          <div className=\"seed-rules\">\r\n            <p onClick={() => this.openRules()}>\r\n              {i18n.t(\"Therules\")}\r\n            </p>\r\n            <Modal\r\n              visible={this.state.visibleRules}\r\n              okText=\"OK\"\r\n              cancelText=\"\"\r\n              centered={true}\r\n              footer={null}\r\n              closable={false}\r\n            >\r\n              <div className=\"rules\">\r\n                <h2 className=\"rules-c\">\r\n                  SEEO\r\n                  {i18n.t(\"rule1\")}\r\n                  </h2>\r\n                <p className=\"rules-c\">\r\n                  * \r\n                  {i18n.t(\"rule2\")}\r\n                   </p>\r\n                <p>\r\n                  ‣ \r\n                  \r\n                  {i18n.t(\"rule3\")}\r\n                   </p>\r\n                <p>\r\n                  ‣\r\n                  {i18n.t(\"rule4\")}\r\n                   </p>\r\n                <p>\r\n                  ‣\r\n                   {i18n.t(\"rule5\")}\r\n                  </p>\r\n                <p>\r\n                  ‣ \r\n                  {i18n.t(\"rule6\")}\r\n                   </p>\r\n                <p>\r\n                  ‣ \r\n                  {i18n.t(\"rule7\")}\r\n                   </p>\r\n                <h2>\r\n                  PS\r\n                  :\r\n                  </h2>\r\n                <p>\r\n                  1.\r\n                  {i18n.t(\"rule8\")}\r\n                  </p>\r\n                <p>\r\n                  2.\r\n                  {i18n.t(\"rule9\")}\r\n                  </p>\r\n                <table>\r\n                  <tr>\r\n                    <td>\r\n                      {i18n.t(\"Outputcycle\")}\r\n                      </td>\r\n                    <td>DAY1</td>\r\n                    <td>DAY2</td>\r\n                    <td>DAY3</td>\r\n                    <td>DAY4</td>\r\n                    <td>DAY5</td>\r\n                    <td>DAY6</td>\r\n                    <td>DAY7</td>\r\n                    <td>DAY8</td>\r\n                    <td>DAY9</td>\r\n                    <td>DAY10</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      {i18n.t(\"obtain\")}\r\n                      SEED\r\n                      </td>\r\n                    <td>6%</td>\r\n                    <td>7%</td>\r\n                    <td>8%</td>\r\n                    <td>9%</td>\r\n                    <td>10%</td>\r\n                    <td>10%</td>\r\n                    <td>11%</td>\r\n                    <td>12%</td>\r\n                    <td>13%</td>\r\n                    <td>14%</td>\r\n                  </tr>\r\n                </table>\r\n                <div style={{ height: \"30px\" }}>\r\n                  <Button style={{ float: \"right\" }} onClick={() => this.closeRules()} type=\"primary\">OK</Button>\r\n                </div>\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n          <div className=\"seed-header\">\r\n            <div className=\"seed-header-head\">\r\n              <img src={require('../../images/head.png')} alt=\"\" />\r\n            </div>\r\n            <div className=\"seed-header-title\">\r\n              <p>{i18n.t(\"SeroEcologicalLaboratorygovernancetoken\")}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"seed-content\">\r\n            <div className=\"content-header\">\r\n              <div className=\"content-header-top\">\r\n                <div className=\"content-header-left\">\r\n                  <p>{this.state.showUserName}&nbsp;&nbsp;&nbsp;{this.state.showUsermainpkr}</p>\r\n                </div>\r\n                <div className=\"content-header-right\">\r\n                  <div onClick={this.showModal}>\r\n                    {i18n.t(\"switch\")}\r\n                  </div>\r\n                  <Modal\r\n                    title={i18n.t(\"Pleaseselectaccount\")}\r\n                    visible={this.state.visibleName}\r\n                    onOk={this.hideModal}\r\n                    onCancel={this.hideModal}\r\n                    okText={i18n.t(\"confirm\")}\r\n                    cancelText={i18n.t(\"cancel\")}\r\n                    footer={null}\r\n                    maskClosable={false}\r\n                  >\r\n                    <ul className=\"model\">\r\n                      {\r\n                        this.state.data.map((item: any, index: number) => {\r\n                          return (\r\n                            <li data-name={item.Name} data-mainpkr={item.MainPKr} onClick={(e) => this.selectName(e)} key={index}>\r\n                              {item.Name}&nbsp;&nbsp;&nbsp;  {item.MainPKr.substring(0, 5)}...{item.MainPKr.substring(item.MainPKr.length - 5, item.MainPKr.length)}\r\n                            </li>\r\n                          )\r\n                        })\r\n                      }\r\n                    </ul>\r\n                  </Modal>\r\n                </div>\r\n              </div>\r\n              <div className=\"content-header-bottom\">\r\n                <ul>\r\n                  <li>SERO\r\n                    {i18n.t(\"balance\")}\r\n                    :</li>\r\n                  <li>{this.state.seroBalance !== \"NaN\" ? this.state.seroBalance : 0}</li>\r\n                  <li>SEED\r\n                  {i18n.t(\"balance\")}\r\n                    :</li>\r\n                  <li>{this.state.seedBalance !== \"NaN\" ? this.state.seedBalance : 0}</li>\r\n                </ul>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"content-btn\">\r\n              <div>\r\n                <Statistic\r\n                  title={i18n.t(\"Totalpledge\")}\r\n                  value={`${this.state.backedValue} SERO`} valueStyle={{ color: '#FFFFFF' }} />\r\n                <button onClick={this.showPledgeModal}>\r\n                  {i18n.t(\"culture\")}\r\n                  SEED\r\n                  \r\n                </button>\r\n                <Modal\r\n                  title={i18n.t(\"Inputthenumberofseedcultured\")}\r\n                  visible={this.state.visiblePledge}\r\n                  onOk={this.sendPledgeModal}\r\n                  onCancel={this.hidePledgeModal}\r\n                  okText={i18n.t(\"confirm\")}\r\n                  cancelText={i18n.t(\"cancel\")}\r\n                  maskClosable={false}\r\n                >\r\n                  <ul className=\"modalbox\">\r\n                    <li>\r\n                      <div>\r\n                        <p>\r\n                          SEED\r\n                          {i18n.t(\"number\")}\r\n                          :</p>\r\n                      </div>\r\n                      <div>\r\n                        <InputNumber type=\"number\" min={1} defaultValue={1} value={new BigNumber(this.state.pledgeNum).dividedBy(10 ** 2).toNumber()} onChange={(e) => this.onChangeSeedNum(e)} className=\"inputWidth\" />\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div>\r\n                        <p>\r\n                          {i18n.t(\"ItcostsSERO\")}:\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <Input value={this.state.pledgeNum} disabled={true} />\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </Modal>\r\n              </div>\r\n              <div>\r\n                <Statistic\r\n                  title={i18n.t(\"Totaldestroyed\")}\r\n                  value={`${this.state.claimantValue} SEED`} valueStyle={{ color: '#FFFFFF' }} />\r\n                <button onClick={this.showDestructionModal} className=\"destruction\">\r\n                  {i18n.t(\"recovery\")}\r\n                  SEED\r\n                </button>\r\n                <Modal\r\n                  title={i18n.t(\"Pleaseenterthenumberofseedtorecycle\")}\r\n                  visible={this.state.visibleDestruction}\r\n                  onOk={this.sendDestructionModal}\r\n                  onCancel={this.hideDestructionModal}\r\n                  okText={i18n.t(\"confirm\")}\r\n                  cancelText={i18n.t(\"cancel\")}\r\n                  maskClosable={false}\r\n                >\r\n                  <ul className=\"modalbox\">\r\n                    <li>\r\n                      <div>\r\n                        <p>\r\n                          {i18n.t(\"Numberofseedrecovered\")}\r\n                          :\r\n                          </p>\r\n                      </div>\r\n                      <div>\r\n                        <InputNumber type=\"number\" min={1} defaultValue={1} value={this.state.destructionNum} onChange={(e) => this.onChangeSeroNum(e)} className=\"inputWidth\" />\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div>\r\n                        <p>\r\n                          {i18n.t(\"Redeemable\")}\r\n                          SERO:\r\n                          </p>\r\n                      </div>\r\n                      <div>\r\n                        <Input value={this.state.destructionNum * 100} disabled={true} />\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n            <div className=\"content-list\">\r\n              <ul>\r\n                <li>\r\n                  <div>\r\n                    {i18n.t(\"Creationtime\")}\r\n                  </div>\r\n                  <div>SERO</div>\r\n                  <div>SEED</div>\r\n                  <div>\r\n                    {i18n.t(\"operation\")}\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li>\r\n                  <div className=\"radio-btn\">\r\n                    <Switch className=\"btn\" size=\"small\" onChange={(e) => this.radiobtn(e)} />\r\n                    <span>&nbsp;&nbsp;&nbsp;{i18n.t(\"Viewall\")}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <ul className=\"content-list-data\">\r\n                {\r\n                  this.state.Listdata.map((item: any, key: number) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <div> {item.creatData}\r\n                        </div>\r\n                        <div>{item.seronum}</div>\r\n                        <div>{item.seednum}</div>\r\n                        <div className=\"content-list-data-box\">\r\n                          <div className={item.operation === \"statein\" ? \"withdrawal\" : \"no-click\"} data-index={item.index} data-name={item.operation} onClick={(e) => this.Withdrawal(e)}>\r\n                            {i18n.t(\"withdrawal\")}\r\n                          </div>\r\n                          <div className=\"detail\" onClick={(e) => this.viewDetail(e)} data-index={item.index} >\r\n                            {i18n.t(\"details\")}\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n            <div className=\"sero-man\">\r\n              <img src={require('../../images/sero_man.png')} alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"seed-footer\">\r\n        </div>\r\n        <div className={this.state.mask ? \"mask\" : \"masks\"}>\r\n          Loading.....\r\n        </div>\r\n        <Modal\r\n          title={i18n.t(\"details\")}\r\n          visible={this.state.visibleDetail}\r\n          onCancel={this.hideDetail}\r\n          footer={null}\r\n          className=\"detail\"\r\n        >\r\n          <div className=\"detailModal\">\r\n            <Descriptions column={1}>\r\n              <Descriptions.Item\r\n                label={`${i18n.t(\"the\")}${detailModal.dayNum}${i18n.t(\"Dayrateofreturn\")}`}\r\n              >{detailModal.todaypercentage}</Descriptions.Item>\r\n              <Descriptions.Item\r\n                label={i18n.t(\"Creationtime\")}\r\n              >{detailModal.creatData}</Descriptions.Item>\r\n            </Descriptions>\r\n            <Descriptions column={3}>\r\n              <Descriptions.Item label=\"\">\r\n                <Statistic value={detailModal.seednum}\r\n                  title={i18n.t(\"Totalculture\")}\r\n                  suffix={\"SEED\"} />\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"\">\r\n                <Statistic value={detailModal.seednum - detailModal.Unlocked}\r\n                  title={i18n.t(\"Incultivation\")}\r\n                  suffix={\"SEED\"} />\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"\">\r\n                <Statistic value={detailModal.seronum}\r\n                  title={i18n.t(\"pledge\")}\r\n                  suffix={\"SERO\"} />\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n            <Descriptions column={3}>\r\n              <Descriptions.Item label=\"\">\r\n                <Statistic value={detailModal.Unlocked && detailModal.Unlocked.toString(10)}\r\n                  title={i18n.t(\"Harvested\")}\r\n                  suffix={\"SEED\"} />\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"\">\r\n                <Statistic value={detailModal.Withdrawn && detailModal.Withdrawn.toString(10)}\r\n                  title={i18n.t(\"Extracted\")}\r\n                  suffix={\"SEED\"} />\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"\">\r\n                <Statistic value={detailModal.Unlocked && detailModal.Withdrawn && detailModal.Unlocked.minus(detailModal.Withdrawn).toString(10)}\r\n                  title={i18n.t(\"Extractable\")}\r\n                  suffix={\"SEED\"} />\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n\r\n            <Descriptions column={3}>\r\n              <Descriptions.Item span={3}> {detailModal.showDetail ? <ul>\r\n                {detailModal.lookDetail ? <li className=\"detailbtn\" data-index={detailModal.index} onClick={(e) => this.WithdrawalDetail(e)}>\r\n                  {i18n.t(\"withdrawal\")}\r\n                  </li> : <Countdown value={detailModal.countDown} valueStyle={{ color: \"#FFFFFF\", background: \"gray\", textAlign: \"center\" }} format=\"HH:mm:ss\" onFinish={() => this.cli()} />}\r\n              </ul> : <div className=\"message-success\">\r\n                  {i18n.t(\"Completed\")}\r\n                </div>}</Descriptions.Item>\r\n            </Descriptions>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction fromValue(v: number | string | undefined, d: number): BigNumber {\r\n  if (v) {\r\n    return new BigNumber(v).dividedBy(10 ** d)\r\n  } else {\r\n    return new BigNumber(0)\r\n  }\r\n}\r\n\r\n\r\nfunction toValue(v: number | string | undefined, d: number): BigNumber {\r\n  if (v) {\r\n    return new BigNumber(v).multipliedBy(10 ** d)\r\n  } else {\r\n    return new BigNumber(0)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Seed;","import React, { FC } from 'react';\r\n// import { Button } from 'antd';\r\nimport './App.scss';\r\n\r\nimport Seed from '../src/components/seed/seed'\r\n\r\nconst App: FC = () => (\r\n  <div>\r\n    <Seed />\r\n  </div>\r\n);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />\r\n  // </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}